require 'rest-client'

class Sender
  def initialize url
    @url = url
  end

  def send_package
    generate_package
    return unless @package

    RestClient.post @url, @package.to_json, {:content_type => :json, :accept => :json} {}
  end

  private

  def generate_waypoints
    @waypoints = [
      {
        point_index: 0,
        title: 'Start',
        description: 'Start point, generated by emulator',
        country: 'Ukraine',
        city: 'Chernigov',
        state: 'Chernigovskaya',
        street: 'Rocossovskogo',
        iso_code: 'UA',
        postal_code: '14032'
      },
      {
        point_index: @track_points.count - 1,
        title: 'Finish',
        description: 'Finish point, generated by emulator',
        country: 'Ukraine',
        city: 'Chernigov',
        state: 'Chernigovskaya',
        street: 'Rocossovskogo',
        iso_code: 'UA',
        postal_code: '14032'
      }
    ]
  end

  def generate_random_track_points count
    @track_points = []
    count.times { @track_points << get_random_track_point }
  end

  def generate_package
    track_points_count = rand 100..1000
    generate_random_track_points track_points_count
    generate_waypoints

    @package = {
      track: {
        title: "Random track",
        description: "",
        #device: "Emulator",
        points: @track_points,
        waypoints: @waypoints
      }
    }
  end

  def get_random_track_point
    [
      Time.new,
      rand(-90..89) + rand, # latitude
      rand(-180..179) + rand, # longtitude
      rand(0..10) # speed
    ]
  end
end
